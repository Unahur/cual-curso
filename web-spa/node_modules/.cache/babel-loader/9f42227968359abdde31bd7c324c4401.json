{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/src/FirstExample.js\";\nimport React from 'react';\n\nclass FirstExample extends React.Component {\n  constructor(props) {\n    super(props); // el state incluye los aspectos dinámicos de la página\n\n    this.state = {\n      texto: \"Miren lo que va a pasar acá\",\n      tamanioFuente: \"medium\"\n    };\n  }\n\n  render() {\n    const theStyle = {\n      fontSize: this.state.tamanioFuente\n    }; // esto es una expresión JSX, parece HTML pero no lo es\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: theStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, this.state.texto)), React.createElement(\"button\", {\n      onClick: () => this.changeTextAndFont(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"React magic\"), React.createElement(FirstExample, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }));\n  } // función que reacciona al evento de apretar el botón\n\n\n  changeTextAndFont() {\n    this.setState({\n      texto: \"Hello React\",\n      tamanioFuente: \"25px\"\n    });\n  }\n\n}\n\nexport default FirstExample;","map":{"version":3,"sources":["/usr/src/app/src/FirstExample.js"],"names":["React","FirstExample","Component","constructor","props","state","texto","tamanioFuente","render","theStyle","fontSize","changeTextAndFont","setState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,YAAN,SAA2BD,KAAK,CAACE,SAAjC,CAA2C;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAEf;;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE,6BAAT;AAAwCC,MAAAA,aAAa,EAAE;AAAvD,KAAb;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAMC,QAAQ,GAAG;AAAEC,MAAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWE;AAAvB,KAAjB,CADK,CAEL;;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG;AAAM,MAAA,KAAK,EAAGE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKJ,KAAL,CAAWC,KADd,CAAH,CADJ,EAII;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKK,iBAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJJ,EAKI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ;AASH,GAnBsC,CAqBvC;;;AACAA,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,QAAL,CAAc;AAAEN,MAAAA,KAAK,EAAE,aAAT;AAAwBC,MAAAA,aAAa,EAAE;AAAvC,KAAd;AACH;;AAxBsC;;AA6B3C,eAAeN,YAAf","sourcesContent":["import React from 'react';\n\n\nclass FirstExample extends React.Component { \n    constructor(props) { \n        super(props); \n        // el state incluye los aspectos dinámicos de la página\n        this.state = { texto: \"Miren lo que va a pasar acá\", tamanioFuente: \"medium\"}\n    }\n\n    render() {\n        const theStyle = { fontSize: this.state.tamanioFuente }\n        // esto es una expresión JSX, parece HTML pero no lo es\n        return (\n            <div>\n                <p><span style={ theStyle }>\n                    { this.state.texto }\n                </span></p>\n                <button onClick={() => this.changeTextAndFont()}>React magic</button>\n                <FirstExample></FirstExample>\n            </div>\n        )\n    }\n\n    // función que reacciona al evento de apretar el botón\n    changeTextAndFont() { \n        this.setState({ texto: \"Hello React\", tamanioFuente: \"25px\" }) \n    }\n}\n\n\n\nexport default FirstExample;\n"]},"metadata":{},"sourceType":"module"}